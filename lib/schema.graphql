"Valida los tipos de nivel"
enum Level {
    principiante
    intermedio
    avanzado
}

union GlobalSearch = Course | Student | Monitor

# Custom types 
type Course {
    _id: ID!
    title: String!
    teacher: String!
    description: String!
    topic: String @deprecated
    people: [Student]
    level: Level
}

interface Person {
    _id: ID!
    name: String!
    email: String!
}

type Student implements Person {
    _id: ID!
    name: String!
    email: String!
    avatar: String
}

type Monitor implements Person {
    _id: ID!
    name: String!
    email: String!
    phone: String
}

type Query {
    "Devuelve todos los cursos"
    getCourses: [Course]
    "Devuelve un curso"
    #pasando parametros a la funcion el ! es para asignarlo obligatorio
    getCourse( id: ID!): Course

    "Devuelve todos los estudiantes"
    #getStudents: [Student]
    getPeople: [Person]

    "Devuelve un estudiante"
    #getStudent ( id: ID!): Student
    getPerson ( id: ID!): Person

    "Ejecuta una busqueda global"
    searchItems( keyword: String! ): [GlobalSearch]
}

input CourseInput {
    title: String!
    teacher: String
    description: String!
    topic: String
    level: Level
}

input CourseEditInput {
    title: String
    teacher: String
    description: String
    topic: String
}

input StudentInput {
    name: String!
    email: String!
}

input StudentEditInput {
    name: String
    email: String
}

input PersonInput {
    name: String!
    email: String!
    phone: String
    avatar: String
}

input PersonEditInput {
    name: String
    email: String
    phone: String
    avatar: String
}

# nos permite insertar informacio desde la api rest , obtener los datos
type Mutation {
    "crea un curso"
    createCourse( input: CourseInput! ): Course

    "Edita un curso"
    editCourse( _id: ID!, input: CourseEditInput): Course

    #"crea un studiante"
    #createStudent( input: StudentInput! ): Student
    "crea un persona"
    createPerson( input: PersonInput! ): Person

    #"Edita un studiante"
    #editStudent( _id: ID!, input: StudentEditInput ): Student
    "Edita un persona"
    editPerson( _id: ID!, input: PersonEditInput ): Person

    "Eliminar un curso"
    deleteCourse( _id: ID! ): String

    "Eliminar un estudiante"
    #deleteStudent
    deletePerson( _id: ID! ): String

    "Agrega una persona a un curso"
    addPeople( courseID: ID!, personID: ID! ): Course
}